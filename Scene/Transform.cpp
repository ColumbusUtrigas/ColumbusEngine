/************************************************
*                  Transform.cpp                *
*************************************************
*          This file is a part of:              *
*               COLUMBUS ENGINE                 *
*************************************************
*                Nika(Columbus) Red             *
*                   12.11.2017                  *
*************************************************/

#include <Scene/Transform.h>

namespace Columbus
{

	Transform::Transform() :
		Matrix(1.0f)
	{
		
	}

	Transform::Transform(Vector3 Pos) :
		Position(Pos),
		Matrix(1.0f)
	{

	}

	Transform::Transform(Vector3 Pos, Vector3 Rot) :
		Position(Pos),
		Rotation(Rot),
		Matrix(1.0f)
	{

	}

	Transform::Transform(Vector3 Pos, Vector3 Rot, Vector3 Scale) :
		Position(Pos),
		Rotation(Rot),
		Scale(Scale),
		Matrix(1.0f)
	{

	}

	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Transform::SetPos(Vector3 Pos)
	{
		this->Position = Pos;
	}
	//////////////////////////////////////////////////////////////////////////////
	void Transform::AddPos(Vector3 Pos)
	{
		this->Position += Pos;
	}
	//////////////////////////////////////////////////////////////////////////////
	Vector3 Transform::GetPos() const
	{
		return Position;
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Transform::SetRot(Vector3 Rot)
	{
		this->Rotation = Rot;
	}
	//////////////////////////////////////////////////////////////////////////////
	void Transform::AddRot(Vector3 Rot)
	{
		this->Rotation += Rot;
	}
	//////////////////////////////////////////////////////////////////////////////
	Vector3 Transform::GetRot() const
	{
		return Rotation;
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Transform::SetScale(Vector3 Scale)
	{
		this->Scale = Scale;
	}
	//////////////////////////////////////////////////////////////////////////////
	void Transform::AddScale(Vector3 Scale)
	{
		this->Scale += Scale;
	}
	//////////////////////////////////////////////////////////////////////////////
	Vector3 Transform::GetScale() const
	{
		return Scale;
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Transform::Update()
	{
		Matrix.identity();

		Matrix.scale(Scale);
		Matrix.rotate(Vector3(0, 0, 1), Rotation.z);
		Matrix.rotate(Vector3(1, 0, 0), Rotation.x);
		Matrix.rotate(Vector3(0, 1, 0), Rotation.y);
		Matrix.translate(Position);

		NormalMatrix = Matrix;
		NormalMatrix.transpose();
		NormalMatrix.invert();
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Transform::SetMatrix(Matrix4 Matrix)
	{
		this->Matrix = Matrix;
	}
	//////////////////////////////////////////////////////////////////////////////
	Matrix4 Transform::GetMatrix() const
	{
		return Matrix;
	}
	//////////////////////////////////////////////////////////////////////////////
	Matrix4 Transform::GetNormalMatrix() const
	{
		return NormalMatrix;
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	Transform::~Transform()
	{

	}

}


