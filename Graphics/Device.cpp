#include <Graphics/Device.h>

namespace Columbus
{

	C_Device* gDevice = nullptr;

	//////////////////////////////////////////////////////////////////////////////
	C_Device::C_Device()
	{

	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	C_Shader* C_Device::createShader() const
	{
		return new C_Shader();
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Shader* C_Device::createShader(std::string aVert, std::string aFrag) const
	{
		return new C_Shader(aVert, aFrag);
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	C_Cubemap* C_Device::createCubemap() const
	{
		return new C_Cubemap();
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Cubemap* C_Device::createCubemap(std::string aPath) const
	{
		return new C_Cubemap(aPath);
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Cubemap* C_Device::createCubemap(std::array<std::string, 6> aPath) const
	{
		return new C_Cubemap(aPath);
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	C_Texture* C_Device::createTexture() const
	{
		return new C_Texture();
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Texture* C_Device::createTexture(std::string aPath, bool aSmooth) const
	{
		return new C_Texture(aPath, aSmooth);
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Texture* C_Device::createTexture(const char* aData, const int aW, const int aH, bool aSmooth) const
	{
		return new C_Texture(aData, aW, aH, aSmooth);
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	C_Mesh* C_Device::createMesh() const
	{
		return new C_Mesh();
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Mesh* C_Device::createMesh(std::vector<C_Vertex> aVert) const
	{
		return new C_Mesh(aVert);
	}
	//////////////////////////////////////////////////////////////////////////////
	C_Mesh* C_Device::createMesh(std::vector<C_Vertex> aVert, C_Material aMat) const
	{
		return new C_Mesh(aVert, aMat);
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	C_Device::~C_Device()
	{

	}

}









