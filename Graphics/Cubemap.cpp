/************************************************
*                  Cubemap.cpp                  *
*************************************************
*          This file is a part of:              *
*               COLUMBUS ENGINE                 *
*************************************************
*                Nika(Columbus) Red             *
*                   20.07.2017                  *
*************************************************/

#include <Graphics/Cubemap.h>

namespace Columbus
{

	//////////////////////////////////////////////////////////////////////////////
	Cubemap::Cubemap()
	{

	}
	//////////////////////////////////////////////////////////////////////////////
	Cubemap::Cubemap(std::array<std::string, 6> aPath)
	{
		
	}
	//////////////////////////////////////////////////////////////////////////////
	Cubemap::Cubemap(std::string aPath)
	{
		
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	void Cubemap::bind() const
	{
		
	}
	//////////////////////////////////////////////////////////////////////////////
	void Cubemap::samplerCube(int i) const
	{
		
	}
	//////////////////////////////////////////////////////////////////////////////
	void Cubemap::unbind() const
	{
		
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	bool Cubemap::load(std::array<std::string, 6> aPath)
	{
		return false;
	}
	//////////////////////////////////////////////////////////////////////////////
	bool Cubemap::load(std::string aPath)
	{
		return false;
	}
	//////////////////////////////////////////////////////////////////////////////
	bool Cubemap::save(std::array<std::string, 6> aPath) const
	{
		int i, type;
		
		for (i = 0; i < 6; i++)
		{
			if (!mBitmaps[i].isExist()) return false;

			type = E_IMAGE_FORMAT_PNG;
			if (mBitmaps[i].getBPP() == 3) type = E_IMAGE_FORMAT_JPG;

			if (!mBitmaps[i].save(aPath[i], type, 90))
			{
				Log::error("Can't save cubemap face: " + aPath[i]);
				return false;
			}

			Log::success("Cubemap face successfully saved: " + aPath[i]);
		}
		return true;
	}
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////
	Cubemap::~Cubemap()
	{
		
	}

}
